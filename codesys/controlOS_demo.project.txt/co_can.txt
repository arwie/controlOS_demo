// Copyright (c) 2024 Artur Wiebe <artur@4wiebe.de>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
// associated documentation files (the "Software"), to deal in the Software without restriction,
// including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


PROGRAM co_can
VAR
	SdoRead:	CIA405.SDO_READ4;
	SdoWrite:	CIA405.SDO_WRITE4;
END_VAR

////////////////////////////////

IF app.cmd.co.func < 0 OR (app.cmd.co.func = 0 AND (app.fbk.co.done OR app.fbk.co.error)) THEN

	app.fbk.co.done  := FALSE;
	app.fbk.co.error := FALSE;


	SdoRead(
		ENABLE := app.cmd.co.func = -1,
		NETWORK := app.cmd.co.master,
		DEVICE := UINT_TO_USINT(app.cmd.co.slave),
		CHANNEL := 0,
		INDEX := app.cmd.co.index,
		SUBINDEX := app.cmd.co.subIndex,
		TIMEOUT := 250,
	);
	MEMUtils.MemCpy(ADR(app.fbk.co.data), ADR(SdoRead.DATA), 4);
	MEMUtils.SwapLocalToIntel(ADR(app.fbk.co.data), 4); //function only swaps on big endian systems
	app.fbk.co.done  := app.fbk.co.done  OR SdoRead.CONFIRM;
	app.fbk.co.error := app.fbk.co.error OR UINT_TO_BOOL(SdoRead.ERROR);


	MEMUtils.MemCpy(ADR(SdoWrite.DATA), ADR(app.cmd.co.data), 4);
	MEMUtils.SwapLocalToIntel(ADR(SdoWrite.DATA[1]), 4); //function only swaps on big endian systems
	SdoWrite(
		ENABLE := app.cmd.co.func = -2,
		NETWORK := app.cmd.co.master,
		DEVICE := UINT_TO_USINT(app.cmd.co.slave),
		CHANNEL := 0,
		INDEX := app.cmd.co.index,
		SUBINDEX := app.cmd.co.subIndex,
		DATALENGTH := app.cmd.co.dataLength,
		TIMEOUT := 250,
	);
	app.fbk.co.done  := app.fbk.co.done  OR SdoWrite.CONFIRM;
	app.fbk.co.error := app.fbk.co.error OR UINT_TO_BOOL(SdoWrite.ERROR);

END_IF
