<?axis([
	'device'		=> 'stepim',
	'bus'			=> 'can',
#	'simulated'		=> true
])?>


common shared conv_frame		as moving frame of xyzr

dim shared this_confUpStream	as location of xyzr = #{<?=conf(lib(),'upstream',  'x')?>, <?=conf(lib(),'upstream',  'y')?>, <?=conf(lib(),'upstream',  'z')?>, 0}
dim shared this_confDownStream	as location of xyzr = #{<?=conf(lib(),'downstream','x')?>, <?=conf(lib(),'downstream','y')?>, <?=conf(lib(),'downstream','z')?>, 0}
dim shared this_streamLength	as double = distl(this_confUpStream, this_confDownStream)


<?lib_init()?>
	dim streamVector_ as location of xyzr = this_confDownStream - this_confUpStream
	dim streamRot_ as double = atan2Deg(streamVector_{2}, streamVector_{1})
	
	conv_frame.type						= 0
	conv_frame.numberDegreesOfFreedom	= 1
	conv_frame.masterSource				= positionCommand
	conv_frame.upStream[1]				= this_confUpStream   +#{0,0,0,streamRot_}
	conv_frame.downStream[1]			= this_confDownStream +#{0,0,0,streamRot_}
	conv_frame.upMaster[1]				= abs(<?=conf(lib(),'upstream','c')?>-<?=conf(lib(),'trigger','c')?>) / positionfactor
	conv_frame.downMaster[1]			= conv_frame.upMaster[1] + this_streamLength
end sub


<?drive_update(3)?>
	conv_driveTune(30000, 0, 0, 414, 3000, 30)
end sub


<?drive_setup()?>
	dim streamCounts_ as long = <?=conf(lib(),'downstream','c', 'positionfactor')?> - <?=conf(lib(),'upstream','c', 0)?>'
	positionfactor				= abs(streamCounts_) / this_streamLength
	direction					= sgn(streamCounts_)
end sub


<?axis_setup()?>
	absolute					= false
	axistype					= 0
	
	<?axis_setupSpeed(250)?>
	
	positionerrormax			= 5
end sub



<?lib_debug()?>
	'com_putLocationXyzr("frame/here",		conv_frame.here)
	'com_putLocationXyzr("frame/zero",		conv_frame.zero)
	com_putDouble("velocityCommand",		velocityCommand)
end sub
