<?com_websocket(55003)?>


dim shared this_scanDistance	as const long		= 80

dim shared this_placePos		as const location of xyzr	= #{-79, 15, 112, 0}

dim shared this_nextScanPos as double


<?lib_start()?>
	data_ppmReset()
	this_nextScanPos = 0
end sub


<?lib_prgStart()?>
	conv_enableAttach()
	delta1_enableAttach()
	tool_select(tool_typeVacuum)
	masterFrame = conv_frame
	jog conv 100
	
	'delta1_torque(30)
	'vrate = 30
end sub


<?lib_prgEvent(1)?>
	dim conv_ as double = conv.positionCommand
	if conv_>=this_nextScanPos then
		camera_trigger()
		com_clear()
		com_putDouble("/trigger",	conv_)
		com_send(this_websocket)
		this_nextScanPos = conv_ + this_scanDistance
	end if
end sub


<?com_prgReceive('this_websocket', 1500)?>
	select case receive_
	case com_receiveMessage
		handleItem(com_getLocationXyzr("/pos"), com_getLong("/color"))
	end select
end sub


<?lib_prgError()?>
	sorter_stopTrigger()
	try
		idletask sorter.prg
	catch else
	end try
end sub

<?lib_prgStop()?>
	allDisable()
	masterFrame = NONE
	tool_select(tool_typeNone)
end sub


sub handleItem(byval pos_ as location of xyzr, byval color_ as long)
	if (conv.positionCommand+conv_frame.downMaster[1]-pos_{1})>120 then
		trigger delta1 ndof=1 value=pos_{1} masterFrame=conv_frame
		fetchItem(pos_, color_)
		data_ppmPlace()
	end if
end sub

sub fetchItem(byval pos_ as location of xyzr, byval color_ as long)
	slave = 5
	moves conv_frame.zero:#{0, pos_{2}, pos_{3}-5, pos_{4}}
	waitForMotion
	while not isMovingFrameSynchronized>0
		sleep 1
	end while
	
	moves #{0, 0, +5, 0} abs=false
	waitForMotion
	tool_grip(true)
	sleep 100
	moves #{0, 0, -5, 0} abs=false
	
	waitForMotion
	slave = off
	
	select case color_
	case 0
		moves #{ -23, -16, 112, -90}
	case 1
		moves #{-107, -16, 112, -90}
	case 2
		moves #{ -42,  61, 112, -90}
	case 3
		moves #{-126,  61, 112, -90}
	end select
	moves #{0, 0, +5, 0} abs=false
	tool_grip(false)
	moves #{0, 0, -5, 0} abs=false
end sub



function anyMoving as long
	anyMoving = delta1.isMoving or conv.isMoving
end function

sub allStop
	while anyMoving
		stop delta1 stoptype=ABORT
		stop conv   stoptype=ABORT
		sleep 1
	end while
end sub

sub allDisable
	allStop()
	delta1_disable()
	conv_disable()
end sub
