
<?com_fifo()?>


dim shared this_lastTrigger			as long
dim shared this_lastTriggerClock	as long
dim shared this_triggerCount		as long
dim shared this_itemCount			as long


<?input('inTrigger', 'long', 'delta1c')?>
	value_ = delta1c_deviceReadBit(0x60FD, 0, 16+0)
end sub

<?input('inLoad', 'long', true, 'false')?>
end sub


<?lib_start()?>
	this_triggerCount	= 0
	this_itemCount		= 0
end sub




<?lib_prgEvent()?>
	if tracking_inTrigger and not this_lastTrigger then
		updateConvSpeed()
		if tracking_inLoad and (useIncrement(this_triggerCount) mod 2) then
			trigger delta1 ndof=1 value=conv.positioncommand+50  MasterFrame=conv_frame
			com_clear()
			com_send(this_fifo)
		end if
	end if
	this_lastTrigger = tracking_inTrigger
end sub

sub updateConvSpeed
	dim speed_ as double = 111 * 1000 / (system.clock-this_lastTriggerClock)
	if inside(speed_, 190, 230) then
		print "conv speed: "; speed_
		speed_ = 0.9*conv.velocityCommand + 0.1*speed_
		jog conv speed_ starttype=IMMEDIATE acceleration=1 deceleration=1
	end if
	this_lastTriggerClock = system.clock
end sub


<?lib_prgStart()?>
	conv_enableAttach()
	delta1_enableAttach()
	tool_select(tool_typeMagnet)
	
	masterFrame = conv_frame
	jog conv 210
end sub


<?com_prgReceive('this_fifo', 300)?>
	select case receive_
	case com_receiveMessage, com_receiveNotify
		trackItem()
	case com_receiveTimeout
		if not delta1_disabled then
			'moves this_parkingPosition
			'waitForMotion
			'delta1_disable()
		end if
	end select
end sub


sub trackItem
	moves #{96-32*(useIncrement(this_itemCount) mod 7), 64, 90, 0}
	moves #{0, 0, +23, 0} abs=false
	tool_grip(true)
	moves #{0, 0, -23, 0} abs=false
	waitForMotion
	slave = 5
	moves conv_frame.zero + #{0, -64, 65, 0}
	moves #{0, 0, +20, 0} abs=false
	waitForMotion
	tool_grip(false)
	moves #{0, 0, -20, 0} abs=false
	waitForMotion
	slave = off
	moves #{0, 48, 100, 0}
end sub


<?lib_prgStop()?>
	stop conv
	masterFrame = NONE
	
	tool_select(tool_typeNone)
	
	delta1_disableDetach()
	conv_disableDetach()
end sub


<?lib_prgError()?>
	stop stoptype=ABORT
	tracking_stopTrigger()
	if not prgRunning then
		tracking_prgStop()
	end if
end sub
