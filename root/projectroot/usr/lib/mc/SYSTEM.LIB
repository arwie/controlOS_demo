<?# Copyright (c) 2019 Artur Wiebe <artur@4wiebe.de>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
# associated documentation files (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
?>


<?
	$etc = !empty(device_busDevices('etc'));
	$can = !empty(device_busDevices('can'));
	$axes = device_axes();
?>


dim shared healthQueryIntervalMs	as const long	= 10*60*1000



<?lib_stopTrigger()?>
	system.enable = off
end sub


public sub system_stopTimeout(byval timeout_ as long)
	system_stopTrigger()
	
	timeout_ = system.clock + timeout_
	while lib_prgRunning and (system.clock < timeout_)
		sleep 100
	end while
	
	if not lib_prgRunning then
		system_stop()
	else
		<?logError('system not stopped in time')?>
	end if
end sub



<?lib_prgStart()?>
	<?if ($etc) l('etc_init()')?>
	<?if ($can) l('can_init()')?>

	<?foreach($axes as $ax=>$axis) 
		ll("{$ax}_axisSetup()")?>

	<?foreach(get('robot') as $rbt=>$robot)
		ll("{$rbt}_robotSetup()")?>

	<?if ($etc) l('etc_start()')?>
	<?if ($can) l('can_start()')?>

	<?foreach($axes as $ax=>$axis) 
		if ($axis['simulated']) {
			call(['try', "$ax.busnumber = 0", 'catch 19017', "$ax.busnumber = 1", 'end try']);
			ll($ax.'.simulated		= true');
		} else {
			ll($ax.'.busnumber		= '.$axis['bus'].'_busnumber');
			ll($ax.'.driveaddress	= '.$axis['address']);
		}
	?>

	drivelog_init()
	drivelog_start()
	simio_init()
	simio_start()
	debug_init()
	debug_start()

	log_phase("init-app")
	<?foreach (array_reverse(get('libs')['app']) as $l=>$lib) 
		ll("{$l}_init()")?>

	log_phase("start-app")
	<?=reset(get('libs')['app'])['name']?>_start()
	log_phase("")
end sub



<?lib_prgPoll('healthQueryIntervalMs', 16)?>
end sub



<?lib_prgStop()?>
	<?=reset(get('libs')['app'])['name']?>_stop()

	debug_stop()
	simio_stop()
	drivelog_stop()

	<?if ($etc) l('etc_stop()')?>
	<?if ($can) l('can_stop()')?>
end sub


<?lib_prgError()?>
	<?if (!debug()) {?>
		init_stopTrigger()
	<?}?>
end sub
