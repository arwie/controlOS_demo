#!/usr/bin/python -Bu

# Copyright (c) 2016 Artur Wiebe <artur@4wiebe.de>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
# associated documentation files (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


from shared import websocket
import argparse, subprocess, logging


parser = argparse.ArgumentParser()
parser.add_argument("host")
parser.add_argument("port")
args = parser.parse_args()



def systemctl(msg):
	for k,v in msg.items():
		subprocess.run(['/bin/systemctl', '--no-block', 'start' if v else 'stop', 'mc@{}.target'.format(k)])


state = False
def process(msg):
	global state
	systemctl({k:v for k,v in msg.items() if v != state[k]} if state else {k:v for k,v in msg.items() if v})
	state = msg



class StateClient(websocket.Client):
	def __init__(self):
		self.initialize(args.host, args.port, messageTimeout=3)
	
	async def onMessageJson(self, msg):
		if msg:
			process(msg)
	
	async def onOpen(self):
		logging.info('connected')
	
	async def onClose(self):
		logging.info('connection closed by server')


websocket.run(StateClient())
